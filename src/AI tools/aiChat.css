body {
    --background: 224 71% 4%;
    --foreground: 213 31% 91%;
    --muted: 223 47% 11%;
    --muted-foreground: 215.4 16.3% 56.9%;
    --accent: 216 34% 17%;
    --accent-foreground: 210 40% 98%;
    --popover: 224 71% 4%;
    --popover-foreground: 215 20.2% 65.1%;
    --border: 216 34% 17%;
    --input: 216 34% 17%;
    --card: 224 71% 4%;
    --card-foreground: 213 31% 91%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 1.2%;
    --secondary: 222.2 47.4% 11.2%;
    --secondary-foreground: 210 40% 98%;
    --destructive: 0 63% 31%;
    --destructive-foreground: 210 40% 98%;
    --ring: 216 34% 17%;
    --radius: 0.5rem;
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    font-family: "Inter", sans-serif;
    font-feature-settings: "rlig" 1, "calt" 1;
}

body {
    margin: 0;
    line-height: inherit;
}

.bg-gray-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

.flex {
    display: flex;
}

.flex-col {
    flex-direction: column;
}

.justify-end {
    justify-content: flex-end;
}

.gap-2 {
    gap: 0.5rem;
}

.min-h-screen {
    min-height: 100vh;
}

.max-w-4xl {
    max-width: 56rem !important;
}

.mx-auto {
    margin-left: auto;
    margin-right: auto;
}

.ring-offset-background {
    --tw-ring-offset-color: hsl(var(--background));
}

.text-gray-100 {
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity));
}

.text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
}


.border-gray-700 {
    /* --tw-border-opacity: 1; */
    border-color: rgb(55 65 81 / var(--tw-border-opacity));
}


.w-full {
    width: 100%;
}

.h-10 {
    height: 2.5rem;
}


button, input, optgroup, select, textarea {
    font-family: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    /* font-size: 100%; */
    font-weight: inherit;
    /* line-height: inherit; */
    letter-spacing: inherit;
    /* color: inherit; */
    margin: 0;
    /* padding: 0; */
}

.text-black {
    --tw-text-opacity: 1;
    color: rgb(0 0 0 / var(--tw-text-opacity));
}

.bg-user {
    background-color: hsl(var(--primary));
}

.rounded-lg {
    border-radius: var(--radius);
}

.max-w-\[80\%\] {
    max-width: 80%;
}

.bg-gray-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

.border {
    border-width: 1px;
}

.rounded-md {
    border-radius: calc(var(--radius) - 2px);
}

.flex-1 {
    flex: 1 1 0%;
}

button, input, optgroup, select, textarea {
    font-family: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    color: inherit;
    margin: 0;
    padding: 0;
}

.pb-32 {
    padding-bottom: 8rem !important;
}

.border-t {
    border-top-width: 1px;
}

.right-0 {
    right: 0px;
}

.left-0 {
    left: 0px;
}

.bottom-0 {
    bottom: 0px;
}

.fixed {
    position: fixed;
}

.relative {
    position: relative;
}
@media (min-width: 1400px) {
    .container {
        max-width: 1400px;
    }
}

.text-gray-400 {
    --tw-text-opacity: 1;
    color: rgb(156 163 175 / var(--tw-text-opacity));
}


.transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.top-1\/2 {
    top: 33%;
}

.left-3 {
    left: 0.75rem;
}

.absolute {
    position: absolute;
}

img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
}

.pl-10 {
    padding-left: 2.5rem;
}

.container {
    width: 100%;
    /* margin-right: auto;
    margin-left: auto;
    padding-right: 2rem;
    padding-left: 2rem; */
}

.disabled\:opacity-50:disabled {
    opacity: 0.5;
}

.disabled\:pointer-events-none:disabled {
    pointer-events: none;
}

.transition-colors {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}

.text-primary-foreground {
    color: hsl(var(--primary-foreground));
}

.font-medium {
    font-weight: 500;
}


.whitespace-nowrap {
    white-space: nowrap;
}

.justify-center {
    justify-content: center;
}

.items-center {
    align-items: center;
}

.inline-flex {
    display: inline-flex
;
}

:disabled {
    cursor: default;
}

button, [role="button"] {
    cursor: pointer;
}

button, input:where([type='button']), input:where([type='reset']), input:where([type='submit']) {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none;
}

button, select {
    text-transform: none;
}

.italic {
    font-style: italic;
}

.text-xs {
    font-size: 0.75rem;
    line-height: 1rem;
}

.cursor-pointer {
    cursor: pointer;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

.\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
}

.\[\&_svg\]\:size-4 svg {
    width: 1rem;
    height: 1rem;
}

.\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
}

.prose {
    font-size: 1rem;
    line-height: 1.625;
    font-family: 'Inter', sans-serif;
  }

.prose pre {
    background-color: black !important;
    color: #212529;
    padding: 1rem;
    border-radius: 0.375rem;
    font-family: monospace;
    font-size: 0.875em;
    overflow-x: auto;
  }
  
  .prose pre code {
    background-color: transparent; 
    font-weight: normal;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  
  
  .prose blockquote,
  .prose dl,
  .prose dd,
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6,
  .prose hr,
  .prose figure,
  .prose p,
  .prose pre {
    margin: 0;
  }
  

  .prose code,
  .prose kbd,
  .prose samp,
  .prose pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size: 1em;
  }
  
  .prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg) !important;
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-inline-start: 1.1428571em;
  }
  
  .prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  
  .prose .max-w-none {
    max-width: none;
  }
  
  .prose-invert {
    color: #e0e0e0;
  }
  
  .prose-invert h1,
  .prose-invert h2,
  .prose-invert h3,
  .prose-invert h4,
  .prose-invert h5,
  .prose-invert h6 {
    color: #ffffff;
  }
  
  .prose-invert a {
    color: #63b3ed;
  }
  
  * {
    border-color: hsl(var(--border));
  }
  
  .prose-invert p,
  .prose-invert blockquote,
  .prose-invert code,
  .prose-invert pre,
  .prose-invert dl,
  .prose-invert dd {
    color: var(--tw-prose-text);
  }
  
  .prose :where(pre),
  .prose :where(blockquote) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    font-family: 'Courier New', monospace;
    font-weight: normal;
    color: inherit;
  }

  .h-500{
    height: 500px;
  }
  